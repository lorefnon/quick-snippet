{"version":3,"sources":["PreviewDialog.tsx"],"names":["PreviewDialog","props","useState","dataURI","setDataURI","useEffect","canvas","toDataURL","includePermalinkInMd","setIncludePermalinkInMd","mdContent","useMemo","img","getPermalink","code","settings","isOpen","title","className","onClose","style","width","window","innerWidth","innerContainer","ref","el","appendChild","canvasContainer","margin","label","labelFor","rows","id","placeholder","value","readOnly","checked","onChange","e","currentTarget","position","maxHeight","overflow","$nest"],"mappings":"yNAae,SAASA,EAAcC,GACpC,IAD8D,EAShCC,mBAAwB,MATQ,mBASvDC,EATuD,KAS9CC,EAT8C,KAW9DC,qBAAU,WACRD,EAAWH,EAAMK,OAAOC,eACvB,CAACN,EAAMK,SAboD,MAeNJ,oBACtD,GAhB4D,mBAevDM,EAfuD,KAejCC,EAfiC,KAmBxDC,EAAYC,mBAAQ,WACxB,IAAMC,EAAG,0BAAsBT,EAAtB,KACT,OAAIK,EACI,IAAN,OAAWI,EAAX,aAAmBC,YAAa,CAC9BC,KAAMb,EAAMa,KACZC,SAAUd,EAAMc,YAEbH,IACN,CAACJ,EAAsBL,EAASF,EAAMc,SAAUd,EAAMa,OAEzD,OACE,cAAC,IAAD,CACEE,QAAM,EACNC,MAAM,UACNC,UAAU,WACVC,QAASlB,EAAMkB,QACfC,MAAO,CACLC,MAAO,GAAMC,OAAOC,YANxB,SASE,sBAAKL,UAAWM,EAAhB,UACE,qBAAKC,IAvCU,SAACC,GACfA,GAAOzB,EAAMK,OAIlBoB,EAAGC,YAAY1B,EAAMK,QAHnBL,EAAMkB,WAqCoBD,UAAWU,IACnC,qBAAKR,MAAO,CAAES,OAAQ,UAAtB,SACE,mEAEF,cAAC,IAAD,CAAWC,MAAM,WAAWC,SAAS,gBAArC,SACE,cAAC,IAAD,CACEC,KAAM,EACNC,GAAG,gBACHC,YAAY,mBACZC,MAAK,OAAEhC,QAAF,IAAEA,IAAW,GAClBiC,UAAQ,EACRhB,MAAO,CAAEC,MAAO,YAGpB,cAAC,IAAD,CAAWS,MAAM,WAAWC,SAAS,WAArC,SACE,cAAC,IAAD,CACEE,GAAG,WACHD,KAAM,EACNG,MAAOzB,EACP0B,UAAQ,EACRhB,MAAO,CAAEC,MAAO,YAGpB,cAAC,IAAD,CACEY,GAAG,qBACHI,QAAS7B,EACT8B,SAAU,SAACC,GACT9B,EAAwB8B,EAAEC,cAAcH,UAE1CP,MAAM,uCAOhB,IAAMN,EAAiBJ,YAAM,CAC3BS,OAAQ,OACRY,SAAU,aAGNb,EAAkBR,YAAM,CAC5BsB,UAAW,QACXrB,MAAO,OACPsB,SAAU,OACVC,MAAO,CACLtC,OAAQ,CACNuB,OAAQ","file":"static/js/96.0cc9e4b6.chunk.js","sourcesContent":["import { Checkbox, Dialog, FormGroup, TextArea } from \"@blueprintjs/core\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { style } from \"typestyle\";\nimport { EditorSettings } from \"./settings\";\nimport { getPermalink } from \"./utils/url\";\n\nexport interface PreviewPopupProps {\n  onClose: () => void;\n  code: string;\n  settings: EditorSettings;\n  canvas: HTMLCanvasElement;\n}\n\nexport default function PreviewDialog(props: PreviewPopupProps) {\n  const alertBodyRef = (el: HTMLDivElement | null) => {\n    if (!el || !props.canvas) {\n      props.onClose();\n      return;\n    }\n    el.appendChild(props.canvas);\n  };\n\n  const [dataURI, setDataURI] = useState<string | null>(null);\n  \n  useEffect(function updateDataURI() {\n    setDataURI(props.canvas.toDataURL());\n  }, [props.canvas]);\n\n  const [includePermalinkInMd, setIncludePermalinkInMd] = useState<boolean>(\n    true\n  );\n\n  const mdContent = useMemo(function computeMarkdownContent() {\n    const img = `![Code Snippet](${dataURI})`;\n    if (includePermalinkInMd)\n      return `[${img}](${getPermalink({\n        code: props.code,\n        settings: props.settings,\n      })}`;\n    return img;\n  }, [includePermalinkInMd, dataURI, props.settings, props.code]);\n\n  return (\n    <Dialog\n      isOpen\n      title=\"Preview\"\n      className=\"bp3-dark\"\n      onClose={props.onClose}\n      style={{\n        width: 0.8 * window.innerWidth,\n      }}\n    >\n      <div className={innerContainer}>\n        <div ref={alertBodyRef} className={canvasContainer}></div>\n        <div style={{ margin: \"1rem 0\" }}>\n          <small>(Right click and save image)</small>\n        </div>\n        <FormGroup label=\"Data URI\" labelFor=\"datauri-input\">\n          <TextArea\n            rows={5}\n            id=\"datauri-input\"\n            placeholder=\"Placeholder text\"\n            value={dataURI ?? \"\"}\n            readOnly\n            style={{ width: \"100%\" }}\n          />\n        </FormGroup>\n        <FormGroup label=\"Markdown\" labelFor=\"md-input\">\n          <TextArea\n            id=\"md-input\"\n            rows={5}\n            value={mdContent}\n            readOnly\n            style={{ width: \"100%\" }}\n          />\n        </FormGroup>\n        <Checkbox\n          id=\"permalink-md-check\"\n          checked={includePermalinkInMd}\n          onChange={(e) => {\n            setIncludePermalinkInMd(e.currentTarget.checked);\n          }}\n          label=\"Include permalink in Markdown\"\n        />\n      </div>\n    </Dialog>\n  );\n}\n\nconst innerContainer = style({\n  margin: \"10px\",\n  position: \"relative\",\n});\n\nconst canvasContainer = style({\n  maxHeight: \"300px\",\n  width: \"100%\",\n  overflow: \"auto\",\n  $nest: {\n    canvas: {\n      margin: \"auto\",\n    },\n  },\n});\n"],"sourceRoot":""}