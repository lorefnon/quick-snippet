{"version":3,"sources":["../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js","../node_modules/codemirror/mode/slim/slim.js"],"names":["CodeMirror","defaultTags","script","style","maybeBackup","stream","pat","cur","current","close","search","backUp","length","match","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","test","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","tags","configTags","configScript","scriptTypes","matches","mode","html","state","token","htmlState","toLowerCase","hasOwnProperty","inTag","modeSpec","endTagA","endTag","localState","localMode","startState","indent","eol","copyState","local","textAfter","line","Pass","innerMode","defineMIME","mod","require","wordObj","words","o","e","curPunc","keywords","indentWords","dedentWords","opening","closing","chain","newtok","tokenize","push","tokenBase","sol","readBlockComment","eatSpace","m","ch","next","readQuoted","regexpAhead","embed","eat","delim","propertyIsEnumerable","skipToEnd","readHereDoc","eatWhile","varList","lastTok","more","start","pos","depth","found","escaped","indexOf","tokenBaseUntilBrace","peek","pop","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","phrase","mayIndent","indented","indentUnit","continuedLine","indentation","kwtype","thisTok","word","column","firstChar","charAt","ct","closed","electricInput","lineComment","fold","rubyMode","modes","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","join","styleMap","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","backup","restore","offset","idx","continueLine","stack","parent","finishContinue","lineContinuable","commaContinuable","rubyInQuote","endQuote","rubyState","startRubySplat","runSplat","htmlLine","startHtmlLine","lastTokenize","startHtmlMode","comment","commentMode","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","startAttributeWrapperMode","sub","subStream","StringStream","string","slice","tabSize","lastColumnPos","lastColumnValue","subMode","subState","firstSub","createMode","query","mimeModes","factory","startSubMode","doctypeLine","_state","startLine","slimTag","slim","startOfLine","slimTagExtras","slimClass","slimAttribute","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","nextTokenize","fresh","last","blankLine"],"mappings":"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","file":"static/js/18.3b463b62.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n    \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n    \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n    \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n    \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n    \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n  ]);\n  var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                             \"catch\", \"loop\", \"proc\", \"begin\"]);\n  var dedentWords = wordObj([\"end\", \"until\"]);\n  var opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\n  var closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n"],"sourceRoot":""}